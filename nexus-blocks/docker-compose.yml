version: '3.9'

services:
  # Main nexus-blocks service
  nexus-blocks:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: nexus-blocks
    restart: unless-stopped
    environment:
      - RUST_LOG=info
      - NEXUS_DEPLOYMENT_MODE=hybrid
      - NEXUS_IO_HEAVY=true
    volumes:
      - nexus-data:/data
      - ./config:/config:ro
    networks:
      - nexus-network
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 256M
        reservations:
          cpus: '2'
          memory: 128M
    healthcheck:
      test: ["CMD", "test", "-f", "/lib/libnexus_blocks.so"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development environment
  nexus-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: nexus-dev
    volumes:
      - .:/workspace
      - cargo-cache:/usr/local/cargo/registry
      - cargo-git:/usr/local/cargo/git
      - target-cache:/workspace/target
    environment:
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
      - CARGO_WATCH_CLEAR=true
    networks:
      - nexus-network
    profiles:
      - dev
    stdin_open: true
    tty: true

  # Benchmark runner
  nexus-bench:
    build:
      context: .
      dockerfile: Dockerfile
      target: benchmark
    container_name: nexus-bench
    volumes:
      - benchmark-results:/bench/target/criterion
    environment:
      - RUST_LOG=warn
    networks:
      - nexus-network
    profiles:
      - bench
    deploy:
      resources:
        limits:
          cpus: '8'
          memory: 1G

  # Redis cache (optional)
  redis:
    image: redis:7-alpine
    container_name: nexus-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - nexus-network
    command: redis-server --maxmemory 64mb --maxmemory-policy allkeys-lru
    profiles:
      - full

  # Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: nexus-prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - nexus-network
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  # Grafana dashboards
  grafana:
    image: grafana/grafana:latest
    container_name: nexus-grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/datasources:/etc/grafana/provisioning/datasources:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=redis-datasource
    networks:
      - nexus-network
    profiles:
      - monitoring

  # Jaeger tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: nexus-jaeger
    ports:
      - "16686:16686"  # UI
      - "14268:14268"  # HTTP collector
      - "6831:6831/udp" # UDP agent
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - nexus-network
    profiles:
      - monitoring

  # Load testing with k6
  k6:
    image: grafana/k6:latest
    container_name: nexus-k6
    volumes:
      - ./tests/load:/scripts
    networks:
      - nexus-network
    profiles:
      - load-test
    command: run /scripts/test.js

networks:
  nexus-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16

volumes:
  nexus-data:
  redis-data:
  prometheus-data:
  grafana-data:
  cargo-cache:
  cargo-git:
  target-cache:
  benchmark-results: