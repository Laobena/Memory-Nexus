# Memory Nexus Unified Docker Architecture (2025)
# Consolidated container orchestration with consistent naming and organization
#
# Usage:
#   Development: docker compose --profile development up -d
#   Production:  docker compose --profile production up -d  
#   Testing:     docker compose --profile testing up -d
#   All:         docker compose --profile all up -d

# ============================================================================
# SHARED CONFIGURATION TEMPLATES
# ============================================================================
x-memory-nexus-common: &memory-nexus-common
  image: memory-nexus-v1:latest
  restart: unless-stopped
  networks:
    - memory-nexus-network
  volumes:
    - memory-nexus-data:/app/data
    - ./configs:/app/config:ro

x-surrealdb-common: &surrealdb-common
  image: surrealdb/surrealdb:v2.0
  restart: unless-stopped
  networks:
    - memory-nexus-network
  volumes:
    - surrealdb-data:/data
  environment:
    - SURREAL_LOG=info

x-qdrant-common: &qdrant-common
  image: qdrant/qdrant:v1.12.1
  restart: unless-stopped
  networks:
    - memory-nexus-network
  volumes:
    - qdrant-data:/qdrant/storage
  environment:
    - QDRANT__LOG_LEVEL=info

x-ollama-common: &ollama-common
  image: ollama/ollama:latest
  restart: unless-stopped
  networks:
    - memory-nexus-network
  volumes:
    - ollama-data:/root/.ollama
  environment:
    - OLLAMA_ORIGINS=*

# ============================================================================
# PRODUCTION SERVICES
# ============================================================================
services:
  # Memory Nexus Application - Production
  memory-nexus-prod:
    <<: *memory-nexus-common
    container_name: memory-nexus-prod
    build:
      context: ..
      dockerfile: docker_environment/production/dockerfiles/Dockerfile.production
    ports:
      - "8080:8080"   # HTTP API
      - "9000:9000"   # WebSocket/gRPC port
    environment:
      - RUST_LOG=info
      - MEMORY_NEXUS_ENV=production
      - SURREALDB_URL=ws://memory-nexus-surrealdb-prod:8000/rpc
      - QDRANT_URL=http://memory-nexus-qdrant-prod:6333
      - OLLAMA_URL=http://memory-nexus-ollama-prod:11434
    depends_on:
      memory-nexus-surrealdb-prod:
        condition: service_healthy
      memory-nexus-qdrant-prod:
        condition: service_healthy
    profiles:
      - production
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SurrealDB - Production
  memory-nexus-surrealdb-prod:
    <<: *surrealdb-common
    container_name: memory-nexus-surrealdb-prod
    ports:
      - "8000:8000"
    command: >
      start --bind 0.0.0.0:8000 --username root 
      --password memory_nexus_secure_2025 
      rocksdb:/data/memory_nexus.db
    volumes:
      - memory-nexus-surrealdb-prod-data:/data
    profiles:
      - production
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant - Production
  memory-nexus-qdrant-prod:
    <<: *qdrant-common
    container_name: memory-nexus-qdrant-prod
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - memory-nexus-qdrant-prod-data:/qdrant/storage
    profiles:
      - production
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama - Production
  memory-nexus-ollama-prod:
    <<: *ollama-common
    container_name: memory-nexus-ollama-prod
    ports:
      - "11434:11434"
    volumes:
      - memory-nexus-ollama-prod-data:/root/.ollama
    profiles:
      - production
      - all


# ============================================================================
# DEVELOPMENT SERVICES
# ============================================================================

  # Memory Nexus Application - Development
  memory-nexus-dev:
    <<: *memory-nexus-common
    container_name: memory-nexus-dev
    build:
      context: ..
      dockerfile: docker_environment/development/dockerfiles/Dockerfile.development
    ports:
      - "8081:8080"   # HTTP API (different port for dev)
      - "9001:9000"   # WebSocket/gRPC port (different port for dev)
    environment:
      - RUST_LOG=debug
      - MEMORY_NEXUS_ENV=development
      - SURREALDB_URL=ws://memory-nexus-surrealdb-dev:8000/rpc
      - QDRANT_URL=http://memory-nexus-qdrant-dev:6333
      - OLLAMA_URL=http://memory-nexus-ollama-dev:11434
    volumes:
      - .:/app:cached
      - memory-nexus-cargo-cache:/usr/local/cargo/registry
      - memory-nexus-target-cache:/app/target
    depends_on:
      - memory-nexus-surrealdb-dev
      - memory-nexus-qdrant-dev
      - memory-nexus-ollama-dev
    profiles:
      - development
      - all
    command: cargo watch -x 'run --bin memory-nexus'

  # SurrealDB - Development
  memory-nexus-surrealdb-dev:
    <<: *surrealdb-common
    container_name: memory-nexus-surrealdb-dev
    ports:
      - "8001:8000"
    command: start --bind 0.0.0.0:8000 --user root --pass dev memory
    volumes:
      - memory-nexus-surrealdb-dev-data:/data
    environment:
      - SURREAL_LOG=debug
    profiles:
      - development
      - all

  # Qdrant - Development  
  memory-nexus-qdrant-dev:
    <<: *qdrant-common
    container_name: memory-nexus-qdrant-dev
    ports:
      - "6335:6333"
      - "6336:6334"
    volumes:
      - memory-nexus-qdrant-dev-data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=debug
    profiles:
      - development
      - all

  # Ollama - Development
  memory-nexus-ollama-dev:
    <<: *ollama-common
    container_name: memory-nexus-ollama-dev
    ports:
      - "11435:11434"
    volumes:
      - memory-nexus-ollama-dev-data:/root/.ollama
    profiles:
      - development
      - all


# ============================================================================
# TESTING SERVICES
# ============================================================================

  # Memory Nexus Test Orchestrator
  memory-nexus-test-orchestrator:
    image: alpine:latest
    container_name: memory-nexus-test-orchestrator
    environment:
      - RUST_LOG=debug
      - MEMORY_NEXUS_ENV=test
    volumes:
      - .:/app:cached
      - memory-nexus-test-results:/results
    networks:
      - memory-nexus-network
    profiles:
      - testing
      - all
    command: >
      sh -c "
        echo '🎯 Memory Nexus Unified Test Orchestrator' &&
        echo 'Enterprise Testing: 21 suites, 455+ tests' &&
        tail -f /dev/null
      "

  # SurrealDB - Testing
  memory-nexus-surrealdb-test:
    <<: *surrealdb-common
    container_name: memory-nexus-surrealdb-test
    ports:
      - "8002:8000"
    command: start --bind 0.0.0.0:8000 --user root --pass test memory
    volumes:
      - memory-nexus-surrealdb-test-data:/data
    environment:
      - SURREAL_LOG=warn
    profiles:
      - testing
      - all

  # Qdrant - Testing
  memory-nexus-qdrant-test:
    <<: *qdrant-common
    container_name: memory-nexus-qdrant-test
    ports:
      - "6337:6333"
      - "6338:6334"
    volumes:
      - memory-nexus-qdrant-test-data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=warn
    profiles:
      - testing
      - all

  # Ollama - Testing
  memory-nexus-ollama-test:
    <<: *ollama-common
    container_name: memory-nexus-ollama-test
    ports:
      - "11436:11434"
    volumes:
      - memory-nexus-ollama-test-data:/root/.ollama
    profiles:
      - testing
      - all

# ============================================================================
# LONGMEMEVAL BENCHMARKING SERVICES
# ============================================================================

  # Memory Nexus ContextMaster LongMemEval Runner
  memory-nexus-longmemeval:
    <<: *memory-nexus-common
    container_name: memory-nexus-longmemeval
    build:
      context: ..
      dockerfile: docker_environment/production/dockerfiles/Dockerfile.production
    ports:
      - "8083:8080"   # HTTP API (longmemeval port)
      - "9003:9000"   # WebSocket/gRPC port (longmemeval port)
    environment:
      - RUST_LOG=info
      - MEMORY_NEXUS_ENV=longmemeval
      - SURREALDB_URL=ws://memory-nexus-surrealdb-longmemeval:8000/rpc
      - QDRANT_URL=http://memory-nexus-qdrant-longmemeval:6333
      - OLLAMA_URL=http://memory-nexus-ollama-longmemeval:11434
      - CONTEXTMASTER_ENABLED=true
      - LONGMEMEVAL_MODE=true
      - TARGET_ACCURACY=0.90
      - MAX_PROCESSING_TIME_MS=95
    volumes:
      - ./longmemeval:/app/longmemeval:ro
      - memory-nexus-longmemeval-results:/app/results
    depends_on:
      memory-nexus-surrealdb-longmemeval:
        condition: service_healthy
      memory-nexus-qdrant-longmemeval:
        condition: service_healthy
      memory-nexus-ollama-longmemeval:
        condition: service_started
    profiles:
      - longmemeval
      - benchmarking
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # SurrealDB - LongMemEval
  memory-nexus-surrealdb-longmemeval:
    <<: *surrealdb-common
    container_name: memory-nexus-surrealdb-longmemeval
    ports:
      - "8003:8000"
    command: start --bind 0.0.0.0:8000 --user root --pass longmemeval_2025 memory
    volumes:
      - memory-nexus-surrealdb-longmemeval-data:/data
    environment:
      - SURREAL_LOG=info
    profiles:
      - longmemeval
      - benchmarking
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant - LongMemEval
  memory-nexus-qdrant-longmemeval:
    <<: *qdrant-common
    container_name: memory-nexus-qdrant-longmemeval
    ports:
      - "6339:6333"
      - "6340:6334"
    volumes:
      - memory-nexus-qdrant-longmemeval-data:/qdrant/storage
    environment:
      - QDRANT__LOG_LEVEL=info
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    profiles:
      - longmemeval
      - benchmarking
      - all
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama - LongMemEval (with mxbai-embed-large pre-loaded)
  memory-nexus-ollama-longmemeval:
    <<: *ollama-common
    container_name: memory-nexus-ollama-longmemeval
    ports:
      - "11437:11434"
    volumes:
      - memory-nexus-ollama-longmemeval-data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    profiles:
      - longmemeval
      - benchmarking
      - all
    command: >
      sh -c "
        ollama serve &
        sleep 10 &&
        ollama pull mxbai-embed-large &&
        echo '✅ mxbai-embed-large model ready for LongMemEval' &&
        wait
      "

  # LongMemEval Benchmark Runner
  memory-nexus-longmemeval-runner:
    image: python:3.11-slim
    container_name: memory-nexus-longmemeval-runner
    environment:
      - MEMORY_NEXUS_URL=http://memory-nexus-longmemeval:8080
      - OLLAMA_URL=http://memory-nexus-ollama-longmemeval:11434
      - SURREALDB_URL=ws://memory-nexus-surrealdb-longmemeval:8000/rpc
      - QDRANT_URL=http://memory-nexus-qdrant-longmemeval:6333
      - CONTEXTMASTER_ENABLED=true
      - TARGET_ACCURACY=0.90
      - BENCHMARK_MODE=contextmaster
      - PYTHONPATH=/app
    volumes:
      - ./longmemeval:/app/longmemeval
      - ./:/app:ro
      - memory-nexus-longmemeval-results:/app/results
    networks:
      - memory-nexus-network
    working_dir: /app/longmemeval
    profiles:
      - longmemeval
      - benchmarking
      - all
    depends_on:
      - memory-nexus-longmemeval
      - memory-nexus-ollama-longmemeval
    command: >
      sh -c "
        echo '🏆 Memory Nexus ContextMaster LongMemEval Benchmark Runner' &&
        echo 'Target: 90%+ World Record (Current SOTA: 86%)' &&
        pip install requests asyncio &&
        echo 'Waiting for services to be ready...' &&
        sleep 30 &&
        echo '🚀 Starting LongMemEval benchmark with ContextMaster...' &&
        python run_longmemeval_contextmaster.py --target-accuracy 0.90 --contextmaster-enabled
      "

# ============================================================================
# MONITORING SERVICES (Optional)
# ============================================================================

  # Prometheus Monitoring
  memory-nexus-prometheus:
    image: prom/prometheus:latest
    container_name: memory-nexus-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - memory-nexus-prometheus-data:/prometheus
    networks:
      - memory-nexus-network
    profiles:
      - monitoring
      - all
    restart: unless-stopped

  # Grafana Dashboard
  memory-nexus-grafana:
    image: grafana/grafana:latest
    container_name: memory-nexus-grafana
    ports:
      - "3000:3000"
    volumes:
      - ./configs/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml:ro
      - memory-nexus-grafana-data:/var/lib/grafana
    networks:
      - memory-nexus-network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=memory_nexus_admin_2025
    profiles:
      - monitoring
      - all
    restart: unless-stopped

# ============================================================================
# UNIFIED VOLUMES (Consistent Naming)
# ============================================================================
volumes:
  # Production Data
  memory-nexus-surrealdb-prod-data:
    name: memory-nexus-surrealdb-prod-data
  memory-nexus-qdrant-prod-data:
    name: memory-nexus-qdrant-prod-data
  memory-nexus-ollama-prod-data:
    name: memory-nexus-ollama-prod-data
  
  # Development Data  
  memory-nexus-surrealdb-dev-data:
    name: memory-nexus-surrealdb-dev-data
  memory-nexus-qdrant-dev-data:
    name: memory-nexus-qdrant-dev-data
  memory-nexus-ollama-dev-data:
    name: memory-nexus-ollama-dev-data
  memory-nexus-cargo-cache:
    name: memory-nexus-cargo-cache
  memory-nexus-target-cache:
    name: memory-nexus-target-cache
  
  # Testing Data
  memory-nexus-surrealdb-test-data:
    name: memory-nexus-surrealdb-test-data
  memory-nexus-qdrant-test-data:
    name: memory-nexus-qdrant-test-data
  memory-nexus-ollama-test-data:
    name: memory-nexus-ollama-test-data
  memory-nexus-test-results:
    name: memory-nexus-test-results
  
  # LongMemEval Benchmarking Data
  memory-nexus-surrealdb-longmemeval-data:
    name: memory-nexus-surrealdb-longmemeval-data
  memory-nexus-qdrant-longmemeval-data:
    name: memory-nexus-qdrant-longmemeval-data
  memory-nexus-ollama-longmemeval-data:
    name: memory-nexus-ollama-longmemeval-data
  memory-nexus-longmemeval-results:
    name: memory-nexus-longmemeval-results
  
  # Shared Data
  memory-nexus-data:
    name: memory-nexus-data
  
  
  # Monitoring Data
  memory-nexus-prometheus-data:
    name: memory-nexus-prometheus-data
  memory-nexus-grafana-data:
    name: memory-nexus-grafana-data

# ============================================================================
# UNIFIED NETWORK (Single Network for All)
# ============================================================================
networks:
  memory-nexus-network:
    name: memory-nexus-network
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: memory-nexus-br