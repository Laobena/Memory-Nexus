# Memory Nexus Production Dockerfile
# Multi-stage build for optimized production binary

# ============================================================================
# Stage 1: Builder - Create optimized release build
# ============================================================================
FROM rust:1.88-bookworm as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    pkg-config \
    libssl-dev \
    libcurl4-openssl-dev \
    cmake \
    clang \
    libc6-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /usr/src/memory-nexus

# Copy Cargo files first for better caching
COPY Cargo.toml Cargo.lock ./
COPY crates/ crates/

# Copy source code
COPY src/ src/

# Copy optional directories (only if they exist)
COPY config/ config/
COPY schema/ schema/

# Build with dev-fast profile (Docker compatible)
ENV RUSTFLAGS=""

RUN cargo build --profile dev-fast --bin memory-nexus

# ============================================================================
# Stage 2: Runtime - Minimal production image
# ============================================================================
FROM debian:bookworm-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    curl \
    libssl3 \
    libcurl4 \
    && rm -rf /var/lib/apt/lists/* \
    && useradd --create-home --shell /bin/bash --uid 1000 memory-nexus

# Create app directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /usr/src/memory-nexus/target/dev-fast/memory-nexus /usr/local/bin/memory-nexus

# Copy configuration files
COPY config/ /app/config/
COPY schema/ /app/schema/

# Create data directories
RUN mkdir -p /app/data /app/logs \
    && chown -R memory-nexus:memory-nexus /app

# Switch to non-root user
USER memory-nexus

# Expose ports
EXPOSE 8080 9000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Set environment variables
ENV RUST_LOG=info
ENV MEMORY_NEXUS_ENV=production

# Start Memory Nexus
CMD ["memory-nexus"]