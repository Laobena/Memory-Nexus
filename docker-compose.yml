# Memory Nexus: Unified Adaptive Pipeline Architecture
# Complete infrastructure for dual-mode operation

networks:
  memory-nexus-network:
    driver: bridge

services:
  # Memory Nexus Pipeline Application
  memory-nexus:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: memory-nexus-app
    ports:
      - "8086:8086"  # Main API port
      - "9090:9090"  # Metrics port
    networks:
      - memory-nexus-network
    depends_on:
      - ollama
      - qdrant
      - surrealdb
      - redis
    environment:
      - RUST_LOG=info,memory_nexus_pipeline=debug
      - OLLAMA_URL=http://ollama:11434
      - QDRANT_URL=http://qdrant:6333
      - SURREALDB_URL=http://surrealdb:8000
      - REDIS_URL=redis://redis:6379
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=8086
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Ollama AI Service
  ollama:
    image: ollama/ollama:latest
    container_name: memory-nexus-ollama
    ports:
      - "11434:11434"
    networks:
      - memory-nexus-network
    volumes:
      - ollama-data:/root/.ollama
    environment:
      - OLLAMA_ORIGINS=*
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    # Disable health check - Ollama image lacks curl/wget
    # The app verifies connectivity directly
    # healthcheck:
    #   test: ["CMD", "echo", "Ollama health check disabled"]
    #   interval: 30s

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    container_name: memory-nexus-qdrant
    ports:
      - "6333:6333"  # HTTP API
      - "6334:6334"  # gRPC API
    networks:
      - memory-nexus-network
    volumes:
      - qdrant-data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    # Disable health check since Qdrant image has no curl/wget/nc
    # The app can still check connectivity directly
    # healthcheck:
    #   test: ["CMD", "echo", "Qdrant has no health check tools"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 3

  # SurrealDB Graph Database
  surrealdb:
    image: surrealdb/surrealdb:latest
    container_name: memory-nexus-surrealdb
    command: start --log trace --user root --pass root memory --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    networks:
      - memory-nexus-network
    volumes:
      - surrealdb-data:/data
    environment:
      - SURREAL_LOG=trace
      - SURREAL_USER=root
      - SURREAL_PASS=root
    restart: unless-stopped
    # Disable health check - SurrealDB image lacks standard tools
    # The app verifies connectivity directly
    # healthcheck:
    #   test: ["CMD", "echo", "SurrealDB health check disabled"]
    #   interval: 30s

  # Redis Cache (Optional)
  redis:
    image: redis:7-alpine
    container_name: memory-nexus-redis
    ports:
      - "6379:6379"
    networks:
      - memory-nexus-network
    volumes:
      - redis-data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  ollama-data:
    driver: local
  qdrant-data:
    driver: local
  surrealdb-data:
    driver: local
  redis-data:
    driver: local